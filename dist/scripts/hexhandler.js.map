{"version":3,"sources":["../../scripts/hexhandler.js"],"names":["define","handler","reader","FileReader","fileRef","setFile","file","onLoad","callback","onload","result","getBytes","offset","size","undefined","console","log","Number","isNaN","parseFloat","isFinite","slice","readAsArrayBuffer"],"mappings":";;AAAAA,OAAO,YAAY;AACf;;AACA,QAAMC,UAAU,EAAhB;AACA,QAAMC,SAAS,IAAIC,UAAJ,EAAf;;AAEA,QAAIC,gBAAJ;;AAEAH,YAAQI,OAAR,GAAkB,UAAUC,IAAV,EAAgB;AAC9BF,kBAAUE,IAAV;AACH,KAFD;;AAIAL,YAAQM,MAAR,GAAiB,UAAUC,QAAV,EAAoB;AACjCN,eAAOO,MAAP,GAAgB,YAAY;AACxBD,qBAASN,OAAOQ,MAAhB;AACH,SAFD;AAGH,KAJD;;AAMAT,YAAQU,QAAR,GAAmB,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AACvC,YAAIT,YAAYU,SAAhB,EAA2B;AACvBC,oBAAQC,GAAR,CAAY,4CAAZ;AACA;AACH;;AAED,YAAId,OAAOO,MAAP,KAAkB,IAAtB,EAA4B;AACxBM,oBAAQC,GAAR,CAAY,wCAAZ;AACA;AACH;AACD,YAAIC,OAAOC,KAAP,CAAaC,WAAWP,MAAX,CAAb,KAAoC,CAACQ,SAASR,MAAT,CAAzC,EAA2D;AACvDG,oBAAQC,GAAR,CAAY,sCAAsCJ,MAAlD;AACA;AACH;;AAED,YAAIS,QAAQjB,QAAQiB,KAAR,CAAcT,MAAd,EAAsBA,SAASC,IAA/B,CAAZ;;AAEAX,eAAOoB,iBAAP,CAAyBD,KAAzB;AACH,KAlBD;;AAoBA,WAAOpB,OAAP;AACH,CAtCD","file":"hexhandler.js","sourcesContent":["define(function () {\r\n    \"use strict\";\r\n    const handler = {};\r\n    const reader = new FileReader();\r\n\r\n    let fileRef;\r\n\r\n    handler.setFile = function (file) {\r\n        fileRef = file;\r\n    };\r\n\r\n    handler.onLoad = function (callback) {\r\n        reader.onload = function () {\r\n            callback(reader.result);\r\n        };\r\n    };\r\n\r\n    handler.getBytes = function (offset, size) {\r\n        if (fileRef === undefined) {\r\n            console.log(\"HexHandler error: Undefined file reference\");\r\n            return;\r\n        }\r\n\r\n        if (reader.onload === null) {\r\n            console.log(\"HexHandler error: No onLoad registered\");\r\n            return;\r\n        }\r\n        if (Number.isNaN(parseFloat(offset)) || !isFinite(offset)) {\r\n            console.log(\"HexHandler error: Invalid offset \" + offset);\r\n            return;\r\n        }\r\n\r\n        let slice = fileRef.slice(offset, offset + size);\r\n\r\n        reader.readAsArrayBuffer(slice);\r\n    };\r\n\r\n    return handler;\r\n});"]}